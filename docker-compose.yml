version: '3.0'
services:

    db:
        container_name: db
        image: mariadb:latest
        volumes:
            - ./db/iotify.sql:/docker-entrypoint-initdb.d/1-init.sql
            - ./user-data/database:/var/lib/mysql
            - /etc/localtime:/etc/localtime:ro
        environment:
            - "MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}"
            - "MYSQL_DATABASE=${MYSQL_DATABASE}"
            - "MYSQL_USER=${MYSQL_USER}"
            - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
        restart: always
        ports:
            - "3306:3306"

    websrv:
        container_name: websrv
        image: iotify/websrv:1.0
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - ./user-data/etc/letsencrypt:/etc/letsencrypt
            - ./build/iotify/src:/var/www/html
            - /etc/localtime:/etc/localtime:ro
        environment:
            - "TIMEZONE=${TIMEZONE}"
            - "MYSQL_HOST=${MYSQL_HOST}"
            - "MYSQL_PORT=${MYSQL_PORT}"
            - "MYSQL_USER=${MYSQL_USER}"
            - "MYSQL_PASSWORD=${MYSQL_PASSWORD}"
            - "MYSQL_DATABASE=${MYSQL_DATABASE}"
        links:
            - db
        depends_on:
            - db
        restart: always


    influxdb:
        image: quay.io/influxdb/influxdb:2.0.0-beta
        container_name: influxdb
        environment:
            - INFLUXDB_REPORTING_DISABLED=true
        volumes:
            - ./influxdb2:/root/.influxdbv2/
        ports:
            - "8086:8086"
            - "9999:9999"
        restart: always

    phpmyadmin:
        image: phpmyadmin/phpmyadmin
        container_name: phpmyadmin
        environment:
            - PMA_ARBITRARY=1
            - PMA_HOST=db
        ports:
            - "8050:80"
        volumes:
            - /sessions
        links:
            - db

    portainer:
        image: portainer/portainer
        container_name: portainer
        command: -H unix:///var/run/docker.sock
        restart: always
        ports:
          - 9090:9000
          - 8000:8000
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock
          - ./portainer_data:/data


    emqx:
        image: iotify/mqtt:1.0
        container_name: emqx
        volumes:
            - ./emqx/lib:/emqx/lib
            - ./emqx/etc:/emqx/etc
            - ./emqx/data:/emqx/data
            - ./emqx/log:/emqx/log
        ports:
            - 18083:18083
            - 1883:1883
            - 8083:8083
            - 8084:8084
        links:
            - db
        restart: always

    netdata:
        image: netdata/netdata
        container_name: netdata
        hostname: ${DOMAINS} # set to fqdn of host
        ports:
            - 19999:19999
        cap_add:
            - SYS_PTRACE
        security_opt:
            - apparmor:unconfined
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /var/run/docker.sock:/var/run/docker.sock:ro
    

    certbot:
        container_name: certbot
        image: cnsoluciones/certbot:latest
        network_mode: host
        restart: always
        volumes:
            - ./user-data/etc/letsencrypt:/etc/letsencrypt
        entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"


